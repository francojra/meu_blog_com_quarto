---
title: "Produzindo Gráficos com ggplot2"
author: "Jeanne Franco"
date: "04-27-2025"
categories: [Gráficos, Linguagem R]
lang: pt
toc: true
---

## Aprendendo a produzir os principais gráficos com ggplot2

Vamos aprender a produzir os principais gráficos usando o pacote `ggplot2` no software R. Os gráficos mais comuns são: barras, boxplot, histogramas e dispersão.

Podemos utilizar o banco de dados de `pinguins`. Esses dados estão disponível no pacote `dados` que foi criado para traduzir os principais conjunto dados utilizados no R, como os dados de plantas `iris`, os dados de carros `mtcarros`, dados `diamante`, entre outros.

Para ter acesso a esses dados traduzidos você pode utilizar a seguinte função `install.packages` para instalar o pacote `dados`, em seguida, você deve carregar o pacote utilizando a função `library` do R. Veja abaixo:

```{r message=FALSE, warning=FALSE}
# Instalar pacote

## install.packages("dados")

# Carregar pacote

library(dados)

# Visualizar conjunto de dados disponíveis

head(dados::pinguins)
head(dados::dados_iris)
head(dados::mtcarros)
```

Após baixar o pacote `dados`, precisamos baixar o pacote `tidyverse` usado para manipulação e visualização de dados.

```{r warning=FALSE, message=FALSE}
# Instalar pacote

## install.packages("tidyverse")

# Carregar pacote

library(tidyverse)
```

Agora vamos visualizar o conjunto de dados de `pinguins` e ver a estrutura desses dados como quais são as variáveis categóricas e numéricas. Você pode utilizar a função `view` para visuzalizar todo os dados em uma janela como a do Excel.

```{r warning=FALSE, message=FALSE}
head(pinguins)
glimpse(pinguins)

# Para visualizar todo conjunto de dados, use:

## view(pinguins)
```

Os dados acima tratam de medidas de tamanho de pinguins adultos forrageando perto da Estação Palmer, Antártica. Inclui medidas para espécies de pinguins, ilha no Arquipélago Palmer, tamanho (comprimento da nadadeira, massa corporal, dimensões do bico) e sexo.

Agora que conhecemos nosso conjunto de dados. Vamos produzir os principais gráficos usando o pacote `ggplot2` presente no metapacote `tidyverse`.

### Gráfico de Barras

```{r warning=FALSE, message=FALSE}

# Manipular dados e calcular médias e erros-padrão

pinguins1 <- pinguins |>
  select(ilha, comprimento_nadadeira) |>
  drop_na() |>
  group_by(ilha) |>
  summarise(media = mean(comprimento_nadadeira),
            n = n(),
            sd = sd(comprimento_nadadeira),
            se = sqrt(sd)/n) 

# Produzir gráfico

g1 <- ggplot(pinguins1, aes(x = ilha, y = media)) +
  geom_col(width = 0.6, fill = "#69b3a2", color = "brown") +
  geom_errorbar(aes(ymax = media + sd,
                    ymin = media - sd),
                width = 0.1, size = 0.8) +
  labs(x = "Ilhas", y = "Comprimento de nadadeiras (mm)") +
  theme_light()

g1
```

### Gráfico Box-plot

```{r warning=FALSE, message=FALSE}

g2 <- ggplot(pinguins, aes(x = ilha, y = comprimento_nadadeira)) +
  geom_boxplot(width = 0.6, fill = "#69b3a2",
               color = "brown") +
  geom_jitter(alpha = 0.45) +
  labs(x = "Ilhas", y = "Comprimento de nadadeiras (mm)") +
  theme_light()

g2

```

### Gráfico de Histograma

```{r warning=FALSE, message=FALSE}

g3 <- ggplot(pinguins, aes(x = comprimento_nadadeira)) +
  geom_histogram(bins = 30, binwidth = 2,
                 fill = "#69b3a2",color = "brown") +
  labs(x = "Comprimento de nadadeiras (mm)",
       y = "Frequência", ) +
  theme_light()

g3
```

### Gráfico de Dispersão

```{r warning=FALSE, message=FALSE}

g4 <- ggplot(pinguins, aes(x = comprimento_nadadeira, 
                     y = massa_corporal)) +
  geom_point(size = 2.5, color = "#69b3a2") +
  geom_smooth(se = T, method = "lm", color = "brown") +
  labs(x = "Comprimento de nadadeiras (mm)",
       y = "Massa corporal (g)") +
  theme_light()

g4
```

### Unindo os gráficos com o pacote `patchwork`

```{r warning=FALSE, message=FALSE, fig.height=6}
# Carregar pacote

library(patchwork)

# Unir gráficos

g1 + g2 + g3 + g4 &   
  
# O operador `&` garante que o tema será aplicado
# a todos os sub-plots
  
  theme(plot.background = element_rect(fill = "gray85"),
        panel.background = element_rect(fill = "gray85"),
        legend.background = element_rect(fill = "gray85")) 
```

### Descrição das camadas:

-   [Select]{.underline}: seleção das colunas de dados utilizados no gráfico;

-   [Drop_na]{.underline}: exclusão de dados faltantes;

-   [Group_by]{.underline}: grupo selecionado para calcular as médias, desvios e erros padrão por `ilha`;

-   [Summarise]{.underline}: usado para fazer os cálculos das médias, desvios e erros padrão;

-   [Ggplot]{.underline}: função para produção o gráfico do pacote `ggplot2`;

-   [Aes]{.underline}: função usada para definição das variáveis X e Y;

-   [Geom_col]{.underline}: função usada para definição do gráfico de colunas;

-   [Geom_errobar]{.underline}: função usada para inserir as barras de desvio padrão;

-   [Geom_boxplot]{.underline}: função usada para definição do gráfico de box-plot;

-   [Geom_jitter]{.underline}: adiciona uma pequena quantidade de variação aleatória à localização de cada ponto definida pelo `geom_point`.

-   [geom_histogram]{.underline}: função usada para definição do gráfico de histogramas;

-   [Geom_point]{.underline}: função usada para definição do gráfico de dispersão;

-   [Geom_smooth]{.underline}: exibe uma linha de tendência suavizada, usando o argumento `method = "lm"` é adicionada uma linha reta.

-   [Labs]{.underline}: função usada para redefinir os nomes dos eixos X e Y;

-   [Theme_light]{.underline}: função usada para definir o tipo de background do gráfico.
