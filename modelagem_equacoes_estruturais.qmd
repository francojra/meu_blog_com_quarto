---
title: "Modelagem de Equações Estruturais"
author: "Jeanne Franco"
format: html
editor: visual
date: 09/04/2013
---

# Equações Estruturais em R: Conceitos e Aplicações Práticas

As Equações Estruturais são uma técnica estatística avançada usada para modelar relações complexas entre variáveis observadas e latentes. Elas combinam aspectos da análise fatorial e da regressão múltipla, permitindo que pesquisadores testem hipóteses sobre relações causais entre variáveis.

Neste post, vamos explorar como implementar modelos de equações estruturais em R usando o pacote `lavaan`. Além disso, vamos interpretar os resultados de um exemplo prático.

## O que são Equações Estruturais?

Equações estruturais são modelos que permitem analisar relações entre variáveis observadas (medidas diretamente como dados de altura, idade, peso, gênero, etc.) e variáveis latentes (não observadas diretamente, mas inferidas a partir de variáveis observadas como felicidade, ansiedade, depressão que podem ser inferidas a partir de informações como níveis de cortisol, interação social, consultas a psicólogos, etc.). As variáveis latentes são conceitos abstratos que não podem ser medidos diretamente, mas inferidos a partir de variáveis observadas.

Portanto, a análise de equações estruturais é uma técnica que combina a análise de regressão múltipla e a análise fatorial para testar relações entre variáveis observáveis e latentes.

Os modelos são úteis em áreas como psicologia, ciências sociais e marketing, onde muitas vezes trabalhamos com conceitos abstratos (como "satisfação do cliente" ou "inteligência emocional") que não podem ser medidos diretamente.

Um modelo de equações estruturais é composto por duas partes principais:

1.  **Modelo de Medida**: Relaciona as variáveis observadas às variáveis latentes.

2.  **Modelo Estrutural**: Define as relações entre as variáveis latentes.

## Exemplo Prático: modelando capacidade mental de crianças

O conjunto de dados de Holzinger e Swineford (1939) consiste em pontuações de testes de capacidade mental de crianças da sétima e oitava séries de duas escolas diferentes (Pasteur e Grant-White). No conjunto de dados original, há pontuações para 26 testes. No entanto, um subconjunto menor com 9 variáveis é mais amplamente usado na literatura.

Os dados são compostos por idade, sexo, escola, grade (séries), percepção visual (X1), cubos (X2), losangos (X3), compreensão de texto (X4), conclusão de frases (X5), significado das palavras (X6), soma acelerada (X7), contagem acelerada de pontos (X8), discriminação acelerada de letras maiúsculas retas e curvas (X9).

1.  **Inteligência espacial**: Medida por três variáveis observadas (percepção visual, cubos e losangos).

2.  **Inteligência verbal**: Medida por três variáveis observadas (compreensão de texto, conclusão de frases e significado das palavras).

3.  **Velocidade**: Medida por três variáveis observadas (soma acelerada, contagem acelerada de pontos e discriminação acelerada de letras maiúsculas retas e curvas).

A capacidade mental de crianças está representada pelas variáveis latentes inteligência espacial, verbal e de velocidade, que são influenciadas pelas variáveis observadas (X1-X9).

### Passo 1: Instalar e Carregar o Pacote `lavaan`

Primeiro, instale e carregue o pacote `lavaan`, que é amplamente utilizado para modelagem de equações estruturais em R.

```{r echo=TRUE, message=FALSE, warning=FALSE}
# Instalar o pacote lavaan (se ainda não estiver instalado)
#install.packages("lavaan")

# Carregar pacotes necessários
library(lavaan)

```

### Passo 2: Criar o Modelo

Vamos definir o modelo de equações estruturais usando os dados `HolzingerSwineford1939` do pacote `lavaan`. Para isso, baixamos os dados e usamos uma sintaxe específica para definir as relações entre as variáveis do modelo.

```{r message=FALSE, warning=FALSE}
# 1. Carregar dados

data("HolzingerSwineford1939")

dados <- HolzingerSwineford1939

head(dados, 6)

# Criar modelo

modelo <- '
  # Fatores latentes
  espacial =~ x1 + x2 + x3
  verbal =~ x4 + x5 + x6
  velocidade =~ x7 + x8 + x9
'
```

Aqui:

-   `=~` indica que as variáveis observadas estão associadas a uma variável latente.

-   `~` indica uma relação de regressão entre variáveis latentes.

### Passo 3: Ajustar o Modelo aos Dados

Vamos simular um conjunto de dados para este exemplo e ajustar o modelo.

```{r message=FALSE, warning=FALSE}
# Ajustar o modelo

ajuste <- sem(modelo, data = dados)

```

### Passo 4: Interpretar os Resultados

Use a função `summary()` para visualizar os resultados do modelo ajustado.

```{r message=FALSE, warning=FALSE, }
# Resumo do modelo
summary(ajuste, standardized = TRUE, fit.measures = TRUE)
```

Aqui estão alguns dos principais resultados que você verá:

1.  **Indicadores de Ajuste do Modelo**:

    -   **CFI (Comparative Fit Index)**: Valores acima de 0.90 indicam um bom ajuste.

    -   **RMSEA (Root Mean Square Error of Approximation)**: Valores abaixo de 0.08 indicam um ajuste aceitável.

    -   **SRMR (Standardized Root Mean Square Residual)**: Valores abaixo de 0.08 são desejáveis.

2.  **Cargas Fatoriais**:

    -   Mostram a relação entre as variáveis observadas e as variáveis latentes. Valores acima de 0.5 são considerados adequados.

## Interpretação dos Resultados

1.  **Indicadores de Ajuste**:

    -   O modelo apresenta um bom ajuste, com CFI = 0.931, RMSEA = 0.092 e SRMR = 0.065.

2.  **Cargas Fatoriais**:

    -   Todas as cargas fatoriais são significativas (p \< 0.001) e acima de 0.5, indicando que as variáveis observadas são bons indicadores das variáveis latentes.

## Gerar gráfico

#### **Passo 1:** instalar pacote `semPlot`

```{r}
# Instale o pacote (se necessário)
#install.packages("semPlot")

# Carregue o pacote
library(semPlot)
```

#### Passo 2: **Gerar o Gráfico do Modelo**

```{r}
# Gráfico básico do modelo
semPaths(
  object = ajuste,
  what = "std",           # Mostra coeficientes padronizados
  edge.label.cex = 0.8,   # Tamanho dos rótulos das setas
  layout = "tree",        # Organização do gráfico
  style = "lisrel",       # Estilo visual (opcional)
  sizeMan = 8,            # Tamanho dos retângulos (variáveis observadas)
  sizeLat = 10,           # Tamanho dos círculos (variáveis latentes)
  nCharNodes = 0,         # Mostra nomes completos
  rotation = 2            # Rotação do gráfico (2 = vertical)
)
```

## Interpretação do gráfico

O gráfico apresenta os nós, onde estão as variáveis e as setas indicam as relações entre elas. As variáveis apresentadas nos círculos (Espacial, Verbal, Velocidade) são as variáveis latentes influenciadas pelas variáveis observadas percepção visual (X1), cubos (X2), losangos (X3), compreensão de texto (X4), conclusão de frases (X5), significado das palavras (X6), soma acelerada (X7), contagem acelerada de pontos (X8), discriminação acelerada de letras maiúsculas retas e curvas (X9) apresentadas nos quadrados. Os valores em vermelho são as estimativas padronizadas de caminhos, indicadas no resumo dos resultados pelos `std.all`. Setas tracejadas indicam relações indiretas e setas sólidas indicam relações diretas entre as variávies.

## Conclusão

Neste post, exploramos como implementar e interpretar modelos de equações estruturais em R usando o pacote `lavaan`. Essa técnica é poderosa para testar hipóteses complexas e entender relações entre variáveis latentes e observadas.

Se você tiver dúvidas ou quiser explorar mais sobre o tema, deixe um comentário abaixo! E não se esqueça de compartilhar este post com seus colegas que também se interessam por programação em R e análise de dados.
