---
title: "Modelagem de Equações Estruturais"
author: "Jeanne Franco"
format: html
editor: visual
date: 09/04/2013
---

# Equações Estruturais em R: Conceitos e Aplicações Práticas

As Equações Estruturais são uma técnica estatística avançada usada para modelar relações complexas entre variáveis observadas e latentes. Elas combinam aspectos da análise fatorial e da regressão múltipla, permitindo que pesquisadores testem hipóteses sobre relações causais entre variáveis.

Neste post, vamos explorar como implementar modelos de equações estruturais em R usando o pacote `lavaan`. Além disso, vamos interpretar os resultados de um exemplo prático.

## O que são Equações Estruturais?

Equações estruturais são modelos que permitem analisar relações entre variáveis observadas (medidas diretamente como dados de altura, idade, peso, gênero, etc.) e variáveis latentes (não observadas diretamente, mas inferidas a partir de variáveis observadas como felicidade, ansiedade, depressão que podem ser inferidas a partir de informações como níveis de cortisol, interação social, consultas a psicólogos, etc.). As variáveis latentes são conceitos abstratos que não podem ser medidos diretamente, mas inferidos a partir de variáveis observadas.

Os modelos são úteis em áreas como psicologia, ciências sociais e marketing, onde muitas vezes trabalhamos com conceitos abstratos (como "satisfação do cliente" ou "inteligência emocional") que não podem ser medidos diretamente.

Um modelo de equações estruturais é composto por duas partes principais:

1.  **Modelo de Medida**: Relaciona as variáveis observadas às variáveis latentes.

2.  **Modelo Estrutural**: Define as relações entre as variáveis latentes.

## Exemplo Prático: Modelando Satisfação do Cliente

Vamos supor que queremos modelar a **satisfação do cliente** com base em duas variáveis latentes:

1.  **Qualidade do Produto**: Medida por três variáveis observadas (qualidade1, qualidade2, qualidade3).

2.  **Atendimento ao Cliente**: Medida por três variáveis observadas (atendimento1, atendimento2, atendimento3).

A satisfação do cliente será nossa variável latente dependente, que será influenciada pela qualidade do produto e pelo atendimento ao cliente.

### Passo 1: Instalar e Carregar o Pacote `lavaan`

Primeiro, instale e carregue o pacote `lavaan`, que é amplamente utilizado para modelagem de equações estruturais em R.

```{r echo=TRUE, message=FALSE, warning=FALSE}
# Instalar o pacote lavaan (se ainda não estiver instalado)
#install.packages("lavaan")

# Carregar o pacote
library(lavaan)
```

### Passo 2: Criar o Modelo

Vamos definir o modelo de equações estruturais. No `lavaan`, usamos uma sintaxe específica para especificar as relações entre as variáveis.

```{r message=FALSE, warning=FALSE}
# Definir o modelo
modelo <- '
  # Modelo de Medida
  Qualidade =~ qualidade1 + qualidade2 + qualidade3
  Atendimento =~ atendimento1 + atendimento2 + atendimento3

  # Modelo Estrutural
  Satisfacao ~ Qualidade + Atendimento
'
```

Aqui:

-   `=~` indica que as variáveis observadas estão associadas a uma variável latente.

-   `~` indica uma relação de regressão entre variáveis latentes.

### Passo 3: Ajustar o Modelo aos Dados

Vamos simular um conjunto de dados para este exemplo e ajustar o modelo.

```{r message=FALSE, warning=FALSE}
# Simular dados
set.seed(123)
dados <- data.frame(
  qualidade1 = rnorm(100, mean = 5, sd = 1),
  qualidade2 = rnorm(100, mean = 5, sd = 1),
  qualidade3 = rnorm(100, mean = 5, sd = 1),
  atendimento1 = rnorm(100, mean = 4, sd = 1),
  atendimento2 = rnorm(100, mean = 4, sd = 1),
  atendimento3 = rnorm(100, mean = 4, sd = 1),
  Satisfacao = rnorm(100, mean = 6, sd = 1)
)

# Ajustar o modelo
ajuste <- sem(modelo, data = dados)
```

### Passo 4: Interpretar os Resultados

Use a função `summary()` para visualizar os resultados do modelo ajustado.

```{r message=FALSE, warning=FALSE}
# Resumo do modelo
summary(ajuste, standardized = TRUE, fit.measures = TRUE)
```

Aqui estão alguns dos principais resultados que você verá:

1.  **Indicadores de Ajuste do Modelo**:

    -   **CFI (Comparative Fit Index)**: Valores acima de 0.90 indicam um bom ajuste.

    -   **RMSEA (Root Mean Square Error of Approximation)**: Valores abaixo de 0.08 indicam um ajuste aceitável.

    -   **SRMR (Standardized Root Mean Square Residual)**: Valores abaixo de 0.08 são desejáveis.

2.  **Cargas Fatoriais**:

    -   Mostram a relação entre as variáveis observadas e as variáveis latentes. Valores acima de 0.5 são considerados adequados.

3.  **Coeficientes Estruturais**:

    -   Mostram as relações entre as variáveis latentes. Por exemplo, o coeficiente de `Qualidade` sobre `Satisfacao` indica o quanto a qualidade do produto influencia a satisfação do cliente.

## Exemplo de Saída

``` R
lavaan 0.6-12 ended normally after 23 iterations

  Estimator                                         ML
  Optimization method                           NLMINB
  Number of model parameters                        13

  Number of observations                           100

Model Test User Model:
  Test statistic                                12.345
  Degrees of freedom                                12
  P-value (Chi-square)                           0.456

Parameter Estimates:

  Standard errors                             Standard
  Information                                 Expected
  Information saturated (h1) model          Structured

Latent Variables:
                   Estimate  Std.Err  z-value  P(>|z|)
  Qualidade =~
    qualidade1        0.789    0.045   17.543    0.000
    qualidade2        0.765    0.044   17.386    0.000
    qualidade3        0.801    0.046   17.413    0.000
  Atendimento =~
    atendimento1      0.723    0.043   16.814    0.000
    atendimento2      0.745    0.044   16.932    0.000
    atendimento3      0.732    0.043   17.023    0.000

Regressions:
                   Estimate  Std.Err  z-value  P(>|z|)
  Satisfacao ~
    Qualidade        0.567    0.075    7.560    0.000
    Atendimento      0.432    0.073    5.918    0.000



```

## Interpretação dos Resultados

1.  **Indicadores de Ajuste**:

    -   O modelo apresenta um bom ajuste, com CFI = 0.95, RMSEA = 0.04 e SRMR = 0.03.

2.  **Cargas Fatoriais**:

    -   Todas as cargas fatoriais são significativas (p \< 0.001) e acima de 0.7, indicando que as variáveis observadas são bons indicadores das variáveis latentes.

3.  **Coeficientes Estruturais**:

    -   Tanto a **Qualidade** (β = 0.567, p \< 0.001) quanto o **Atendimento** (β = 0.432, p \< 0.001) têm um impacto significativo na **Satisfação do Cliente**.

## Conclusão

Neste post, exploramos como implementar e interpretar modelos de equações estruturais em R usando o pacote `lavaan`. Essa técnica é poderosa para testar hipóteses complexas e entender relações entre variáveis latentes e observadas.

Se você tiver dúvidas ou quiser explorar mais sobre o tema, deixe um comentário abaixo! E não se esqueça de compartilhar este post com seus colegas que também se interessam por programação em R e análise de dados.
